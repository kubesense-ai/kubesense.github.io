apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ include "logsensor.fullname" . }}"
  labels:
    {{- include "logsensor.labels" . | nindent 4 }}
data:
  vector.yaml: |
    # Ingest data by tailing one or more files
    sources:
      kube_logs:
        type: kubernetes_logs
        data_dir: "/var/local/lib/vector/"
        glob_minimum_cooldown_ms: 10000
        ignore_older_secs: 600
        # oldest_first: false
        # max_read_bytes: 512000
        # extra_label_selector: "app.kubernetes.io/instance!=kubesense"
        exclude_paths_glob_patterns:
          # this is to ignore reading rotated files
          - "/**/*.log.*"
          - "/var/log/pods/kubesense*/**/*.log"
          - "/var/log/pods/kubesense*/**/*.log*"
          {{ if ne .Release.Namespace "kubesense" }}
          - "/var/log/pods/{{ .Release.Namespace }}*/**/*.log"
          - "/var/log/pods/{{ .Release.Namespace }}*/**/*.log*"
          {{ end }}
          {{ range .Values.global.ignoreLogsNamespace }}
          - "/var/log/pods/{{ . }}*/**/*.log"
          - "/var/log/pods/{{ . }}*/**/*.log*"
          {{ end }}
      # vector_internal_metrics:
      #   type: internal_metrics
      #   namespace: agent
    transforms:
      logs_transform:
        type: remap
        inputs:
        - kube_logs
        source: |
          .cluster = "{{ .Values.global.cluster_name }}"

    # Sink into vector aggregator
    sinks:
    #   victoria_metrics:
    #     type: prometheus_remote_write
    #     inputs:
    #       - vector_internal_metrics
    #     endpoint: "{{ if $.Values.global.externalVictoriaMetrics.enabled }}{{ $.Values.global.externalVictoriaMetrics.url }}{{ else }}http://{{ .Values.global.vmAgentIp }}:{{ .Values.global.vmAgentHttpPort }}{{ end }}/api/v1/write"
      vector_agg:
        type: http
        inputs:
          - logs_transform
        encoding:
          codec: "native"
        uri: "{{ $.Values.global.kubeAggregatorIp }}:{{ $.Values.global.nodePort.kubeAggregatorLogPort }}"
        # batch:
        #   max_events: 10000
        #   timeout_secs: 1
        # buffer:
        # - type: memory
        #   max_events: 100000
        #   when_full: block