{{- if .Values.global.ebpfsensor.enabled  }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "kubesensor.fullname" . }}
  labels:
    {{- include "kubesensor.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "kubesensor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/customConfig: {{ sha256sum (print .Values.kubesensorConfig) }}
        {{- if .Values.tke_sidecar }}
        eks.tke.cloud.tencent.com/ds-injection: "true"
        {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kubesensor.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{ if $.Values.global.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ $.Values.global.image.pullSecrets }}
      {{ end }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: {{ tpl .Values.hostNetwork . }}
      hostPID: true
      priorityClassName: {{ .Values.priorityClassName }}
      serviceAccountName: {{ include "kubesensor.cluterrolename" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.sysctlInitContainer.enabled }}
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "{{ tpl .Values.image.repository . }}:{{ tpl (toString .Values.image.tag) . }}"
        imagePullPolicy: {{ tpl .Values.image.pullPolicy . }}
        command: ["/bin/bash", "-c", "sysctl -w net.core.bpf_jit_enable=1 || true"]
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ tpl .Values.image.repository . }}:{{ tpl (toString .Values.image.tag) . }}"
          imagePullPolicy: {{ tpl .Values.image.pullPolicy . }}
          {{- if .Values.tke_sidecar }}
          command: 
          - /usr/bin/kubesensor
          args:
          - --sidecar
          - -f
          - /etc/kubesensor/kubesensor.yaml
          {{- end }}
          ports:
            - name: receive
              containerPort: {{ tpl (toString .Values.externalAgentHttpProxyPort) . }}
              protocol: TCP
          # livenessProbe:
          #   tcpSocket:
          #     port: otel
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          # readinessProbe:
          #   tcpSocket:
          #     port: otel
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          env:
          - name: TZ
            value: {{ tpl .Values.timezone . }}
          - name: KUBECOL_NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: KUBECOL_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: KUBECOL_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          {{- if .Values.tke_sidecar }}
          - name: CTRL_NETWORK_INTERFACE
            value: "eth0"
          {{- end }}
          - name: KUBECOL_POD_IP
            valueFrom:
              fieldRef:
              {{- if .Values.tke_sidecar }}
                fieldPath: status.hostIP 
              {{- else }}
                fieldPath: status.podIP
              {{- end }}
          - name: KUBECOL_MEM_LIMIT
            valueFrom:
              resourceFieldRef:
                divisor: 1Mi
                resource: limits.memory
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: sys-kernel-debug
              mountPath: /sys/kernel/debug
              readOnly: true
            - name: kubesensor-conf
              mountPath: /etc/kubesensor
            {{- if .Values.netns.mount }}
            - name: netns # required to access net namespace info
              mountPath: /var/run/netns
              readOnly: true
              mountPropagation: HostToContainer
           {{- end }}
          {{- range .Values.extraVolumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath | default "" }}
              readOnly: {{ .readOnly }}
          {{- end }}
      volumes:
        {{- if .Values.netns.mount }}
        - name: netns
          hostPath:
            path: /var/run/netns
            type: DirectoryOrCreate
        {{- end }}
        - name: sys-kernel-debug
          hostPath:
            path: /sys/kernel/debug
        - name: kubesensor-conf
          configMap:
            name: {{ include "kubesensor.fullname" . }}
      {{- range .Values.extraVolumeMounts }}
        - name: {{ .name }}
          {{- if .existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .existingClaim }}
          {{- else if .hostPath }}
          hostPath:
            path: {{ .hostPath }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
      {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
{{- end }}
